{"ast":null,"code":"// api/authApi.js\nimport axios from './axios';\nconst authApi = {\n  login: async (email, password) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred during login'\n      };\n    }\n  },\n  register: async (email, password) => {\n    try {\n      const response = await axios.post('/auth/register', {\n        email,\n        password\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'An error occurred during registration'\n      };\n    }\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await axios.get('/auth/user');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to get current user'\n      };\n    }\n  },\n  updateProfile: async userData => {\n    try {\n      const response = await axios.put('/auth/user', userData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update profile'\n      };\n    }\n  },\n  requestPasswordReset: async email => {\n    try {\n      const response = await axios.post('/auth/reset-password', {\n        email\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to request password reset'\n      };\n    }\n  }\n};\nexport default authApi;","map":{"version":3,"names":["axios","authApi","login","email","password","response","post","success","data","error","_error$response","_error$response$data","message","register","_error$response2","_error$response2$data","getCurrentUser","get","_error$response3","_error$response3$data","updateProfile","userData","put","_error$response4","_error$response4$data","requestPasswordReset","_error$response5","_error$response5$data"],"sources":["/Users/peikexu/Documents/goal-planner-app/src/api/authApi.js"],"sourcesContent":["// api/authApi.js\nimport axios from './axios';\n\nconst authApi = {\n  login: async (email, password) => {\n    try {\n      const response = await axios.post('/auth/login', { email, password });\n      return { success: true, data: response.data };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'An error occurred during login' \n      };\n    }\n  },\n\n  register: async (email, password) => {\n    try {\n      const response = await axios.post('/auth/register', { email, password });\n      return { success: true, data: response.data };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'An error occurred during registration' \n      };\n    }\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const response = await axios.get('/auth/user');\n      return { success: true, data: response.data };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Failed to get current user' \n      };\n    }\n  },\n\n  updateProfile: async (userData) => {\n    try {\n      const response = await axios.put('/auth/user', userData);\n      return { success: true, data: response.data };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Failed to update profile' \n      };\n    }\n  },\n\n  requestPasswordReset: async (email) => {\n    try {\n      const response = await axios.post('/auth/reset-password', { email });\n      return { success: true, data: response.data };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Failed to request password reset' \n      };\n    }\n  },\n};\n\nexport default authApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}