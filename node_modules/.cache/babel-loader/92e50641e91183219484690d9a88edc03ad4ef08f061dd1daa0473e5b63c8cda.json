{"ast":null,"code":"import axios from './axios';\n\n/**\n * Get all goals for the current user\n * @returns {Promise<Object>} Response with goals data\n */\nexport const getAllGoals = async () => {\n  try {\n    return await axios.get('/goals');\n  } catch (error) {\n    console.error('Get all goals error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch goals',\n      data: [] // Return empty array as fallback\n    };\n  }\n};\n\n/**\n * Get a specific goal by ID\n * @param {string} goalId - The ID of the goal to fetch\n * @returns {Promise<Object>} Response with goal data\n */\nexport const getGoalById = async goalId => {\n  try {\n    return await axios.get(`/goals/${goalId}`);\n  } catch (error) {\n    console.error(`Get goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch goal details'\n    };\n  }\n};\n\n/**\n * Create a new goal\n * @param {Object} goalData - The goal data to create\n * @returns {Promise<Object>} Response with created goal\n */\nexport const createGoal = async goalData => {\n  try {\n    return await axios.post('/goals', goalData);\n  } catch (error) {\n    console.error('Create goal error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to create goal'\n    };\n  }\n};\n\n/**\n * Update an existing goal\n * @param {string} goalId - The ID of the goal to update\n * @param {Object} goalData - The updated goal data\n * @returns {Promise<Object>} Response with updated goal\n */\nexport const updateGoal = async (goalId, goalData) => {\n  try {\n    return await axios.put(`/goals/${goalId}`, goalData);\n  } catch (error) {\n    console.error(`Update goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to update goal'\n    };\n  }\n};\n\n/**\n * Delete a goal\n * @param {string} goalId - The ID of the goal to delete\n * @returns {Promise<Object>} Response indicating success/failure\n */\nexport const deleteGoal = async goalId => {\n  try {\n    return await axios.delete(`/goals/${goalId}`);\n  } catch (error) {\n    console.error(`Delete goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to delete goal'\n    };\n  }\n};\n\n/**\n * Mark a goal as complete\n * @param {string} goalId - The ID of the goal to complete\n * @returns {Promise<Object>} Response with updated goal\n */\nexport const completeGoal = async goalId => {\n  try {\n    return await axios.patch(`/goals/${goalId}/complete`);\n  } catch (error) {\n    console.error(`Complete goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to complete goal'\n    };\n  }\n};\n\n/**\n * Generate an AI plan for a goal\n * @param {Object} goalData - The goal data to create a plan for\n * @returns {Promise<Object>} Response with AI-generated plan\n */\nexport const generatePlan = async goalData => {\n  try {\n    return await axios.post('/goals/generate-plan', goalData);\n  } catch (error) {\n    console.error('Generate plan error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to generate goal plan'\n    };\n  }\n};\n\n/**\n * Fetch goals - alias for getAllGoals for backward compatibility\n */\nexport const fetchGoals = getAllGoals;\n\n/**\n * Refresh goals - alias for getAllGoals for backward compatibility\n */\nexport const refreshGoals = getAllGoals;\n\n// Default export for backward compatibility\nconst goalApi = {\n  getAllGoals,\n  getGoalById,\n  createGoal,\n  updateGoal,\n  deleteGoal,\n  completeGoal,\n  generatePlan,\n  fetchGoals,\n  refreshGoals\n};\nexport default goalApi;","map":{"version":3,"names":["axios","getAllGoals","get","error","console","success","data","getGoalById","goalId","createGoal","goalData","post","updateGoal","put","deleteGoal","delete","completeGoal","patch","generatePlan","fetchGoals","refreshGoals","goalApi"],"sources":["/Users/peikexu/Documents/goal_tracker/goal-planner-app/src/api/goalApi.js"],"sourcesContent":["import axios from './axios';\n\n/**\n * Get all goals for the current user\n * @returns {Promise<Object>} Response with goals data\n */\nexport const getAllGoals = async () => {\n  try {\n    return await axios.get('/goals');\n  } catch (error) {\n    console.error('Get all goals error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch goals',\n      data: [] // Return empty array as fallback\n    };\n  }\n};\n\n/**\n * Get a specific goal by ID\n * @param {string} goalId - The ID of the goal to fetch\n * @returns {Promise<Object>} Response with goal data\n */\nexport const getGoalById = async (goalId) => {\n  try {\n    return await axios.get(`/goals/${goalId}`);\n  } catch (error) {\n    console.error(`Get goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch goal details'\n    };\n  }\n};\n\n/**\n * Create a new goal\n * @param {Object} goalData - The goal data to create\n * @returns {Promise<Object>} Response with created goal\n */\nexport const createGoal = async (goalData) => {\n  try {\n    return await axios.post('/goals', goalData);\n  } catch (error) {\n    console.error('Create goal error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to create goal'\n    };\n  }\n};\n\n/**\n * Update an existing goal\n * @param {string} goalId - The ID of the goal to update\n * @param {Object} goalData - The updated goal data\n * @returns {Promise<Object>} Response with updated goal\n */\nexport const updateGoal = async (goalId, goalData) => {\n  try {\n    return await axios.put(`/goals/${goalId}`, goalData);\n  } catch (error) {\n    console.error(`Update goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to update goal'\n    };\n  }\n};\n\n/**\n * Delete a goal\n * @param {string} goalId - The ID of the goal to delete\n * @returns {Promise<Object>} Response indicating success/failure\n */\nexport const deleteGoal = async (goalId) => {\n  try {\n    return await axios.delete(`/goals/${goalId}`);\n  } catch (error) {\n    console.error(`Delete goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to delete goal'\n    };\n  }\n};\n\n/**\n * Mark a goal as complete\n * @param {string} goalId - The ID of the goal to complete\n * @returns {Promise<Object>} Response with updated goal\n */\nexport const completeGoal = async (goalId) => {\n  try {\n    return await axios.patch(`/goals/${goalId}/complete`);\n  } catch (error) {\n    console.error(`Complete goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to complete goal'\n    };\n  }\n};\n\n/**\n * Generate an AI plan for a goal\n * @param {Object} goalData - The goal data to create a plan for\n * @returns {Promise<Object>} Response with AI-generated plan\n */\nexport const generatePlan = async (goalData) => {\n  try {\n    return await axios.post('/goals/generate-plan', goalData);\n  } catch (error) {\n    console.error('Generate plan error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to generate goal plan'\n    };\n  }\n};\n\n/**\n * Fetch goals - alias for getAllGoals for backward compatibility\n */\nexport const fetchGoals = getAllGoals;\n\n/**\n * Refresh goals - alias for getAllGoals for backward compatibility\n */\nexport const refreshGoals = getAllGoals;\n\n// Default export for backward compatibility\nconst goalApi = {\n  getAllGoals,\n  getGoalById,\n  createGoal,\n  updateGoal,\n  deleteGoal,\n  completeGoal,\n  generatePlan,\n  fetchGoals,\n  refreshGoals\n};\n\nexport default goalApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}