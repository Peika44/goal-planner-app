{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Request interceptor - Adds the authentication token to requests\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor - Handle common errors\ninstance.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  const customError = {\n    success: false,\n    error: 'An unexpected error occurred'\n  };\n\n  // Handle server errors or no response\n  if (!error.response) {\n    customError.error = 'Network error or server is not responding';\n    return Promise.reject(customError);\n  }\n\n  // Handle authentication errors\n  if (error.response.status === 401) {\n    customError.error = 'Authentication error. Please log in again.';\n\n    // Optional: Clear token and redirect to login page\n    localStorage.removeItem('token');\n    // If you're using React Router:\n    // window.location.href = '/login';\n  }\n\n  // Include server error message if available\n  if (error.response.data && error.response.data.error) {\n    customError.error = error.response.data.error;\n  } else if (error.response.status === 404) {\n    customError.error = 'The requested resource was not found';\n  } else if (error.response.status === 500) {\n    customError.error = 'Server error. Please try again later.';\n  }\n  console.error('API Error:', customError.error);\n  return Promise.reject(customError);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","data","customError","success","status","removeItem","console"],"sources":["/Users/peikexu/Documents/goal_tracker/goal-planner-app/src/api/axios.js"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000/api',\n});\n\n// Request interceptor - Adds the authentication token to requests\ninstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor - Handle common errors\ninstance.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    const customError = {\n      success: false,\n      error: 'An unexpected error occurred',\n    };\n\n    // Handle server errors or no response\n    if (!error.response) {\n      customError.error = 'Network error or server is not responding';\n      return Promise.reject(customError);\n    }\n    \n    // Handle authentication errors\n    if (error.response.status === 401) {\n      customError.error = 'Authentication error. Please log in again.';\n      \n      // Optional: Clear token and redirect to login page\n      localStorage.removeItem('token');\n      // If you're using React Router:\n      // window.location.href = '/login';\n    }\n    \n    // Include server error message if available\n    if (error.response.data && error.response.data.error) {\n      customError.error = error.response.data.error;\n    } else if (error.response.status === 404) {\n      customError.error = 'The requested resource was not found';\n    } else if (error.response.status === 500) {\n      customError.error = 'Server error. Please try again later.';\n    }\n    \n    console.error('API Error:', customError.error);\n    return Promise.reject(customError);\n  }\n);\n\nexport default instance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,QAAQ,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC/BU,QAAQ,IAAK;EACZ,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACAJ,KAAK,IAAK;EACT,MAAMK,WAAW,GAAG;IAClBC,OAAO,EAAE,KAAK;IACdN,KAAK,EAAE;EACT,CAAC;;EAED;EACA,IAAI,CAACA,KAAK,CAACG,QAAQ,EAAE;IACnBE,WAAW,CAACL,KAAK,GAAG,2CAA2C;IAC/D,OAAOC,OAAO,CAACC,MAAM,CAACG,WAAW,CAAC;EACpC;;EAEA;EACA,IAAIL,KAAK,CAACG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;IACjCF,WAAW,CAACL,KAAK,GAAG,4CAA4C;;IAEhE;IACAJ,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChC;IACA;EACF;;EAEA;EACA,IAAIR,KAAK,CAACG,QAAQ,CAACC,IAAI,IAAIJ,KAAK,CAACG,QAAQ,CAACC,IAAI,CAACJ,KAAK,EAAE;IACpDK,WAAW,CAACL,KAAK,GAAGA,KAAK,CAACG,QAAQ,CAACC,IAAI,CAACJ,KAAK;EAC/C,CAAC,MAAM,IAAIA,KAAK,CAACG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;IACxCF,WAAW,CAACL,KAAK,GAAG,sCAAsC;EAC5D,CAAC,MAAM,IAAIA,KAAK,CAACG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;IACxCF,WAAW,CAACL,KAAK,GAAG,uCAAuC;EAC7D;EAEAS,OAAO,CAACT,KAAK,CAAC,YAAY,EAAEK,WAAW,CAACL,KAAK,CAAC;EAC9C,OAAOC,OAAO,CAACC,MAAM,CAACG,WAAW,CAAC;AACpC,CACF,CAAC;AAED,eAAejB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}