{"ast":null,"code":"var _jsxFileName = \"/Users/peikexu/Documents/goal-planner-app/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios for API calls\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\n\n// --- Helper function to get token ---\n// In a real app, this might be more complex (e.g., checking expiry)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getToken = () => localStorage.getItem('token');\n\n// --- Header Component ---\n// (No changes needed for this component based on the request)\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"bg-blue-600 text-white p-4 shadow-md rounded-t-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold font-sans\",\n        children: \"GoalMaster Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Goal Item Component ---\n// Assuming the API returns goals with id, title, description, and status fields.\n// Adjust field names (e.g., goal.name instead of goal.title) if your API structure differs.\n_c = Header;\nfunction GoalItem({\n  goal\n}) {\n  // Basic styling based on status\n  const statusStyles = {\n    'In Progress': 'bg-yellow-100 border-yellow-400 text-yellow-700',\n    'Not Started': 'bg-gray-100 border-gray-400 text-gray-700',\n    'Completed': 'bg-green-100 border-green-400 text-green-700' // Example for completed\n  };\n\n  // Default style if status is unknown or missing\n  const defaultStyle = 'bg-white border-gray-300';\n  const currentStyle = statusStyles[goal.status] || defaultStyle;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `border rounded-lg p-4 mb-4 shadow-sm ${currentStyle}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold font-sans mb-1\",\n      children: goal.title || 'Untitled Goal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-600 mb-2\",\n      children: goal.description || 'No description.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `text-xs font-medium px-2.5 py-0.5 rounded border ${currentStyle}`,\n      children: goal.status || 'Unknown Status'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-xs bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-xs bg-green-500 hover:bg-green-600 text-white font-bold py-1 px-2 rounded\",\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-xs bg-red-500 hover:bg-red-600 text-white font-bold py-1 px-2 rounded\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Main Content Area Component ---\n// Now receives goals and loading/error state from the App component\n_c2 = GoalItem;\nfunction MainContent({\n  goals,\n  isLoading,\n  error\n}) {\n  // Display loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto p-6 flex-grow\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading goals...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Display error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto p-6 flex-grow\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: [\"Error loading goals: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container mx-auto p-6 flex-grow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold font-sans mb-4\",\n      children: \"Your Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mb-6 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded shadow\",\n      children: \"+ Add New Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: goals.length > 0 ?\n      // Assuming API provides a unique 'id' field for each goal.\n      // Change 'goal.id' to 'goal._id' if your API uses MongoDB's default.\n      goals.map(goal => /*#__PURE__*/_jsxDEV(GoalItem, {\n        goal: goal\n      }, goal.id || goal._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No goals found. Create some goals!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Footer Component ---\n// (No changes needed for this component based on the request)\n_c3 = MainContent;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"bg-gray-100 text-gray-600 p-4 text-center text-sm rounded-b-lg mt-auto\",\n    children: [\"\\xA9 \", new Date().getFullYear(), \" GoalMaster Pro. All rights reserved.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Main App Component ---\n// Manages state for goals, loading, errors, and handles API fetching/auth.\n_c4 = Footer;\nexport default function App() {\n  _s();\n  const [goals, setGoals] = useState([]); // State for storing goals\n  const [isLoading, setIsLoading] = useState(true); // State for loading status\n  const [error, setError] = useState(null); // State for error messages\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  // useEffect hook to fetch goals when the component mounts\n  useEffect(() => {\n    const fetchGoals = async () => {\n      const token = getToken(); // Get token from localStorage\n\n      // If no token, redirect to login page ('/')\n      if (!token) {\n        console.log('No token found, redirecting to login.');\n        navigate('/');\n        setIsLoading(false); // Stop loading as we are redirecting\n        return;\n      }\n\n      // Reset state before fetching\n      setIsLoading(true);\n      setError(null);\n      try {\n        // Make API request to fetch goals\n        const response = await axios.get('/goals', {\n          // Make sure '/goals' is your correct API endpoint\n          headers: {\n            // Include Authorization header with Bearer token\n            Authorization: `Bearer ${token}`\n          }\n        });\n        // Update goals state with data from API response\n        setGoals(response.data);\n      } catch (err) {\n        console.error('Error fetching goals:', err);\n        // Check if the error is an authorization error (e.g., 401 Unauthorized)\n        if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n          console.log('Unauthorized or Forbidden, clearing token and redirecting to login.');\n          localStorage.removeItem('token'); // Remove invalid token\n          setError('Authentication failed. Please log in again.'); // Set error message\n          navigate('/'); // Redirect to login page\n        } else {\n          // Handle other types of errors (network error, server error, etc.)\n          setError(err.message || 'Failed to fetch goals.');\n        }\n      } finally {\n        // Set loading state to false once fetching is complete (success or error)\n        setIsLoading(false);\n      }\n    };\n    fetchGoals(); // Call the fetch function\n\n    // Dependency array includes navigate to ensure it's stable,\n    // though typically navigate itself doesn't change.\n  }, [navigate]);\n  return (\n    /*#__PURE__*/\n    // Use flex column and min-height to ensure footer stays at the bottom\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col min-h-screen bg-gray-50 font-sans\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n        goals: goals,\n        isLoading: isLoading,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"v5gycsAVHqrw+Bht/ITexL3FJpM=\", false, function () {\n  return [useNavigate];\n});\n_c5 = App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"GoalItem\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"Footer\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","getToken","localStorage","getItem","Header","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","GoalItem","goal","statusStyles","defaultStyle","currentStyle","status","title","description","_c2","MainContent","goals","isLoading","error","length","map","id","_id","_c3","Footer","Date","getFullYear","_c4","App","_s","setGoals","setIsLoading","setError","navigate","fetchGoals","token","console","log","response","get","headers","Authorization","data","err","removeItem","message","_c5","$RefreshReg$"],"sources":["/Users/peikexu/Documents/goal-planner-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios for API calls\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\n\n// --- Helper function to get token ---\n// In a real app, this might be more complex (e.g., checking expiry)\nconst getToken = () => localStorage.getItem('token');\n\n// --- Header Component ---\n// (No changes needed for this component based on the request)\nfunction Header() {\n  return (\n    <header className=\"bg-blue-600 text-white p-4 shadow-md rounded-t-lg\">\n      <div className=\"container mx-auto\">\n        <h1 className=\"text-2xl font-bold font-sans\">GoalMaster Pro</h1>\n        {/* Add navigation links here if needed */}\n      </div>\n    </header>\n  );\n}\n\n// --- Goal Item Component ---\n// Assuming the API returns goals with id, title, description, and status fields.\n// Adjust field names (e.g., goal.name instead of goal.title) if your API structure differs.\nfunction GoalItem({ goal }) {\n  // Basic styling based on status\n  const statusStyles = {\n    'In Progress': 'bg-yellow-100 border-yellow-400 text-yellow-700',\n    'Not Started': 'bg-gray-100 border-gray-400 text-gray-700',\n    'Completed': 'bg-green-100 border-green-400 text-green-700', // Example for completed\n  };\n\n  // Default style if status is unknown or missing\n  const defaultStyle = 'bg-white border-gray-300';\n  const currentStyle = statusStyles[goal.status] || defaultStyle;\n\n  return (\n    <div className={`border rounded-lg p-4 mb-4 shadow-sm ${currentStyle}`}>\n      {/* Display goal title - adjust 'goal.title' if your API uses a different field like 'goal.name' */}\n      <h3 className=\"text-lg font-semibold font-sans mb-1\">{goal.title || 'Untitled Goal'}</h3>\n      {/* Display goal description */}\n      <p className=\"text-sm text-gray-600 mb-2\">{goal.description || 'No description.'}</p>\n      {/* Display goal status */}\n      <span className={`text-xs font-medium px-2.5 py-0.5 rounded border ${currentStyle}`}>\n        {goal.status || 'Unknown Status'}\n      </span>\n      {/* Action Buttons - Add onClick handlers for functionality */}\n      <div className=\"mt-2 space-x-2\">\n         <button className=\"text-xs bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded\">\n           Edit\n         </button>\n         <button className=\"text-xs bg-green-500 hover:bg-green-600 text-white font-bold py-1 px-2 rounded\">\n           Complete\n         </button>\n         <button className=\"text-xs bg-red-500 hover:bg-red-600 text-white font-bold py-1 px-2 rounded\">\n           Delete\n         </button>\n      </div>\n    </div>\n  );\n}\n\n// --- Main Content Area Component ---\n// Now receives goals and loading/error state from the App component\nfunction MainContent({ goals, isLoading, error }) {\n\n  // Display loading state\n  if (isLoading) {\n    return <main className=\"container mx-auto p-6 flex-grow\"><p>Loading goals...</p></main>;\n  }\n\n  // Display error state\n  if (error) {\n    return <main className=\"container mx-auto p-6 flex-grow\"><p className=\"text-red-500\">Error loading goals: {error}</p></main>;\n  }\n\n  return (\n    <main className=\"container mx-auto p-6 flex-grow\">\n      <h2 className=\"text-xl font-semibold font-sans mb-4\">Your Goals</h2>\n      {/* Button to add a new goal - Add onClick handler */}\n      <button className=\"mb-6 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded shadow\">\n        + Add New Goal\n      </button>\n\n      {/* List of goals */}\n      <div>\n        {goals.length > 0 ? (\n          // Assuming API provides a unique 'id' field for each goal.\n          // Change 'goal.id' to 'goal._id' if your API uses MongoDB's default.\n          goals.map(goal => <GoalItem key={goal.id || goal._id} goal={goal} />)\n        ) : (\n          <p className=\"text-gray-500\">No goals found. Create some goals!</p>\n        )}\n      </div>\n    </main>\n  );\n}\n\n// --- Footer Component ---\n// (No changes needed for this component based on the request)\nfunction Footer() {\n  return (\n    <footer className=\"bg-gray-100 text-gray-600 p-4 text-center text-sm rounded-b-lg mt-auto\">\n      © {new Date().getFullYear()} GoalMaster Pro. All rights reserved.\n    </footer>\n  );\n}\n\n// --- Main App Component ---\n// Manages state for goals, loading, errors, and handles API fetching/auth.\nexport default function App() {\n  const [goals, setGoals] = useState([]); // State for storing goals\n  const [isLoading, setIsLoading] = useState(true); // State for loading status\n  const [error, setError] = useState(null); // State for error messages\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  // useEffect hook to fetch goals when the component mounts\n  useEffect(() => {\n    const fetchGoals = async () => {\n      const token = getToken(); // Get token from localStorage\n\n      // If no token, redirect to login page ('/')\n      if (!token) {\n        console.log('No token found, redirecting to login.');\n        navigate('/');\n        setIsLoading(false); // Stop loading as we are redirecting\n        return;\n      }\n\n      // Reset state before fetching\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        // Make API request to fetch goals\n        const response = await axios.get('/goals', { // Make sure '/goals' is your correct API endpoint\n          headers: {\n            // Include Authorization header with Bearer token\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        // Update goals state with data from API response\n        setGoals(response.data);\n      } catch (err) {\n        console.error('Error fetching goals:', err);\n        // Check if the error is an authorization error (e.g., 401 Unauthorized)\n        if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n          console.log('Unauthorized or Forbidden, clearing token and redirecting to login.');\n          localStorage.removeItem('token'); // Remove invalid token\n          setError('Authentication failed. Please log in again.'); // Set error message\n          navigate('/'); // Redirect to login page\n        } else {\n          // Handle other types of errors (network error, server error, etc.)\n          setError(err.message || 'Failed to fetch goals.');\n        }\n      } finally {\n        // Set loading state to false once fetching is complete (success or error)\n        setIsLoading(false);\n      }\n    };\n\n    fetchGoals(); // Call the fetch function\n\n    // Dependency array includes navigate to ensure it's stable,\n    // though typically navigate itself doesn't change.\n  }, [navigate]);\n\n  return (\n    // Use flex column and min-height to ensure footer stays at the bottom\n    <div className=\"flex flex-col min-h-screen bg-gray-50 font-sans\">\n      <Header />\n      {/* Pass goals, loading state, and error state to MainContent */}\n      <MainContent goals={goals} isLoading={isLoading} error={error} />\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}