{"ast":null,"code":"var _jsxFileName = \"/Users/peikexu/Documents/goal_tracker/goal-planner-app/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getCurrentUser, logout, isLoggedIn } from '../api/authApi';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to check auth status\n  const checkAuthStatus = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Only attempt to get user data if a token exists\n      if (isLoggedIn()) {\n        console.log('Token exists, checking user data...');\n        const response = await getCurrentUser();\n        console.log('Auth check response:', response);\n        if (response.success && response.user) {\n          setCurrentUser(response.user);\n        } else {\n          console.error('Auth check failed:', response.error);\n          setError(response.error);\n          setCurrentUser(null);\n\n          // If the error is authentication-related, clear the token\n          if (response.error && (response.error.includes('not authorized') || response.error.includes('token') || response.error.includes('authentication'))) {\n            logout();\n          }\n        }\n      } else {\n        console.log('No token found, user is not logged in');\n        setCurrentUser(null);\n      }\n    } catch (err) {\n      console.error('Unexpected auth check error:', err);\n      setError('Authentication check failed');\n      setCurrentUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check auth status on mount\n  useEffect(() => {\n    console.log('AuthProvider mounted, checking auth status...');\n    checkAuthStatus();\n  }, []);\n\n  // Handle logout\n  const handleLogout = () => {\n    logout();\n    setCurrentUser(null);\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    loading,\n    error,\n    setCurrentUser,\n    logout: handleLogout,\n    isAuthenticated: !!currentUser,\n    checkAuthStatus // Expose this to manually refresh auth status\n  };\n  console.log('AuthContext state:', {\n    loading,\n    isAuthenticated: !!currentUser\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getCurrentUser","logout","isLoggedIn","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","checkAuthStatus","console","log","response","success","user","includes","err","handleLogout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/peikexu/Documents/goal_tracker/goal-planner-app/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getCurrentUser, logout, isLoggedIn } from '../api/authApi';\n\n// Create the context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to check auth status\n  const checkAuthStatus = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Only attempt to get user data if a token exists\n      if (isLoggedIn()) {\n        console.log('Token exists, checking user data...');\n        const response = await getCurrentUser();\n        \n        console.log('Auth check response:', response);\n        \n        if (response.success && response.user) {\n          setCurrentUser(response.user);\n        } else {\n          console.error('Auth check failed:', response.error);\n          setError(response.error);\n          setCurrentUser(null);\n          \n          // If the error is authentication-related, clear the token\n          if (response.error && \n              (response.error.includes('not authorized') || \n                response.error.includes('token') || \n                response.error.includes('authentication'))) {\n            logout();\n          }\n        }\n      } else {\n        console.log('No token found, user is not logged in');\n        setCurrentUser(null);\n      }\n    } catch (err) {\n      console.error('Unexpected auth check error:', err);\n      setError('Authentication check failed');\n      setCurrentUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check auth status on mount\n  useEffect(() => {\n    console.log('AuthProvider mounted, checking auth status...');\n    checkAuthStatus();\n  }, []);\n\n  // Handle logout\n  const handleLogout = () => {\n    logout();\n    setCurrentUser(null);\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    loading,\n    error,\n    setCurrentUser,\n    logout: handleLogout,\n    isAuthenticated: !!currentUser,\n    checkAuthStatus // Expose this to manually refresh auth status\n  };\n\n  console.log('AuthContext state:', { loading, isAuthenticated: !!currentUser });\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}