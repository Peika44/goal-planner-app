{"ast":null,"code":"import axios from './axios';\n\n/**\n * Register a new user\n * @param {Object} userData - User registration data\n * @returns {Promise<Object>} Response object\n */\nexport const register = async userData => {\n  try {\n    const response = await axios.post('/auth/register', userData);\n    if (response.success && response.token) {\n      localStorage.setItem('token', response.token);\n    }\n    return response;\n  } catch (error) {\n    console.error('Registration error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to register. Please try again.'\n    };\n  }\n};\n\n/**\n * Login a user\n * @param {Object} credentials - User login credentials\n * @returns {Promise<Object>} Response object\n */\nexport const login = async credentials => {\n  try {\n    const response = await axios.post('/auth/login', credentials);\n    if (response.success && response.token) {\n      localStorage.setItem('token', response.token);\n    }\n    return response;\n  } catch (error) {\n    console.error('Login error:', error);\n    return {\n      success: false,\n      error: error.error || 'Invalid credentials. Please try again.'\n    };\n  }\n};\n\n/**\n * Get the current user's data\n * @returns {Promise<Object>} Response object\n */\nexport const getCurrentUser = async () => {\n  try {\n    return await axios.get('/auth/user');\n  } catch (error) {\n    console.error('Get current user error:', error);\n\n    // Special handling for 404 errors - likely the endpoint doesn't exist yet\n    if (error.error && error.error.includes('not found')) {\n      console.warn('The /auth/user endpoint might not be implemented yet');\n    }\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch user data'\n    };\n  }\n};\n\n/**\n * Update user profile\n * @param {Object} profileData - Updated user profile data\n * @returns {Promise<Object>} Response object\n */\nexport const updateProfile = async profileData => {\n  try {\n    return await axios.put('/auth/user', profileData);\n  } catch (error) {\n    console.error('Update profile error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to update profile'\n    };\n  }\n};\n\n/**\n * Request password reset\n * @param {Object} email - User email\n * @returns {Promise<Object>} Response object\n */\nexport const resetPassword = async email => {\n  try {\n    return await axios.post('/auth/reset-password', {\n      email\n    });\n  } catch (error) {\n    console.error('Reset password error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to send password reset email'\n    };\n  }\n};\n\n/**\n * Logout user by removing token\n * @returns {Object} Success status\n */\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return {\n    success: true\n  };\n};\n\n/**\n * Check if user is logged in\n * @returns {boolean}\n */\nexport const isLoggedIn = () => {\n  return !!localStorage.getItem('token');\n};","map":{"version":3,"names":["axios","register","userData","response","post","success","token","localStorage","setItem","error","console","login","credentials","getCurrentUser","get","includes","warn","updateProfile","profileData","put","resetPassword","email","logout","removeItem","isLoggedIn","getItem"],"sources":["/Users/peikexu/Documents/goal_tracker/goal-planner-app/src/api/authApi.js"],"sourcesContent":["import axios from './axios';\n\n/**\n * Register a new user\n * @param {Object} userData - User registration data\n * @returns {Promise<Object>} Response object\n */\nexport const register = async (userData) => {\n  try {\n    const response = await axios.post('/auth/register', userData);\n    if (response.success && response.token) {\n      localStorage.setItem('token', response.token);\n    }\n    return response;\n  } catch (error) {\n    console.error('Registration error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to register. Please try again.'\n    };\n  }\n};\n\n/**\n * Login a user\n * @param {Object} credentials - User login credentials\n * @returns {Promise<Object>} Response object\n */\nexport const login = async (credentials) => {\n  try {\n    const response = await axios.post('/auth/login', credentials);\n    if (response.success && response.token) {\n      localStorage.setItem('token', response.token);\n    }\n    return response;\n  } catch (error) {\n    console.error('Login error:', error);\n    return {\n      success: false,\n      error: error.error || 'Invalid credentials. Please try again.'\n    };\n  }\n};\n\n/**\n * Get the current user's data\n * @returns {Promise<Object>} Response object\n */\nexport const getCurrentUser = async () => {\n  try {\n    return await axios.get('/auth/user');\n  } catch (error) {\n    console.error('Get current user error:', error);\n    \n    // Special handling for 404 errors - likely the endpoint doesn't exist yet\n    if (error.error && error.error.includes('not found')) {\n      console.warn('The /auth/user endpoint might not be implemented yet');\n    }\n    \n    return {\n      success: false,\n      error: error.error || 'Failed to fetch user data'\n    };\n  }\n};\n\n/**\n * Update user profile\n * @param {Object} profileData - Updated user profile data\n * @returns {Promise<Object>} Response object\n */\nexport const updateProfile = async (profileData) => {\n  try {\n    return await axios.put('/auth/user', profileData);\n  } catch (error) {\n    console.error('Update profile error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to update profile'\n    };\n  }\n};\n\n/**\n * Request password reset\n * @param {Object} email - User email\n * @returns {Promise<Object>} Response object\n */\nexport const resetPassword = async (email) => {\n  try {\n    return await axios.post('/auth/reset-password', { email });\n  } catch (error) {\n    console.error('Reset password error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to send password reset email'\n    };\n  }\n};\n\n/**\n * Logout user by removing token\n * @returns {Object} Success status\n */\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return { success: true };\n};\n\n/**\n * Check if user is logged in\n * @returns {boolean}\n */\nexport const isLoggedIn = () => {\n  return !!localStorage.getItem('token');\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}