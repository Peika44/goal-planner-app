{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useAuth.js\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport authApi from '../api/authApi';\n\n/**\n * Custom hook for authentication state and operations\n * @returns {Object} Auth state and functions\n */\nexport const useAuth = () => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const response = await authApi.getCurrentUser();\n      if (response.success) {\n        setCurrentUser(response.data);\n      } else {\n        // Clear token if invalid\n        localStorage.removeItem('token');\n      }\n      setLoading(false);\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async (email, password) => {\n    setError('');\n    setLoading(true);\n    const response = await authApi.login(email, password);\n    setLoading(false);\n    if (response.success) {\n      localStorage.setItem('token', response.data.token);\n      setCurrentUser(response.data.user);\n      navigate('/dashboard');\n      return true;\n    } else {\n      setError(response.error);\n      return false;\n    }\n  };\n  const register = async (email, password) => {\n    setError('');\n    setLoading(true);\n    const response = await authApi.register(email, password);\n    setLoading(false);\n    if (response.success) {\n      return true;\n    } else {\n      setError(response.error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    navigate('/');\n  };\n  const updateProfile = async userData => {\n    setError('');\n    setLoading(true);\n    const response = await authApi.updateProfile(userData);\n    setLoading(false);\n    if (response.success) {\n      setCurrentUser(response.data);\n      return true;\n    } else {\n      setError(response.error);\n      return false;\n    }\n  };\n  const resetPassword = async email => {\n    setError('');\n    setLoading(true);\n    const response = await authApi.requestPasswordReset(email);\n    setLoading(false);\n    if (response.success) {\n      return true;\n    } else {\n      setError(response.error);\n      return false;\n    }\n  };\n  return {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    resetPassword,\n    isAuthenticated: !!currentUser\n  };\n};\n_s(useAuth, \"5iCqshW3ag96MHHgbPUR57Q3+B4=\", false, function () {\n  return [useNavigate];\n});\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","useNavigate","authApi","useAuth","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","navigate","checkAuthStatus","token","localStorage","getItem","response","getCurrentUser","success","data","removeItem","login","email","password","setItem","user","register","logout","updateProfile","userData","resetPassword","requestPasswordReset","isAuthenticated"],"sources":["/Users/peikexu/Documents/goal-planner-app/src/hooks/useAuth.js"],"sourcesContent":["// hooks/useAuth.js\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport authApi from '../api/authApi';\n\n/**\n * Custom hook for authentication state and operations\n * @returns {Object} Auth state and functions\n */\nexport const useAuth = () => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      \n      const response = await authApi.getCurrentUser();\n      \n      if (response.success) {\n        setCurrentUser(response.data);\n      } else {\n        // Clear token if invalid\n        localStorage.removeItem('token');\n      }\n      \n      setLoading(false);\n    };\n\n    checkAuthStatus();\n  }, []);\n\n  const login = async (email, password) => {\n    setError('');\n    setLoading(true);\n    \n    const response = await authApi.login(email, password);\n    \n    setLoading(false);\n    \n    if (response.success) {\n      localStorage.setItem('token', response.data.token);\n      setCurrentUser(response.data.user);\n      navigate('/dashboard');\n      return true;\n    } else {\n      setError(response.error);\n      return false;\n    }\n  };\n\n  const register = async (email, password) => {\n    setError('');\n    setLoading(true);\n    \n    const response = await authApi.register(email, password);\n    \n    setLoading(false);\n    \n    if (response.success) {\n      return true;\n    } else {\n      setError(response.error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    navigate('/');\n  };\n\n  const updateProfile = async (userData) => {\n    setError('');\n    setLoading(true);\n    \n    const response = await authApi.updateProfile(userData);\n    \n    setLoading(false);\n    \n    if (response.success) {\n      setCurrentUser(response.data);\n      return true;\n    } else {\n      setError(response.error);\n      return false;\n    }\n  };\n\n  const resetPassword = async (email) => {\n    setError('');\n    setLoading(true);\n    \n    const response = await authApi.requestPasswordReset(email);\n    \n    setLoading(false);\n    \n    if (response.success) {\n      return true;\n    } else {\n      setError(response.error);\n      return false;\n    }\n  };\n\n  return {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    resetPassword,\n    isAuthenticated: !!currentUser\n  };\n};\n\nexport default useAuth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}