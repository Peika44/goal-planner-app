{"ast":null,"code":"var _jsxFileName = \"/Users/peikexu/Documents/goal_tracker/goal-planner-app/src/pages/ForgotPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Mail } from 'lucide-react';\nimport { resetPassword } from '../api/authApi';\nimport './AuthPages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess(false);\n\n      // Call reset password API\n      const response = await resetPassword(email);\n      if (response.success) {\n        setSuccess(true);\n        setEmail(''); // Clear the form after success\n      } else {\n        setError(response.error || 'Password reset failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Password reset error:', err);\n      setError('An unexpected error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    style: {\n      backgroundImage: `url('/images/login-background.jpg')`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-subtitle\",\n        children: \"Enter your email address and we'll send you a link to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Password reset instructions have been sent to your email. Please check your inbox.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(Mail, {\n            className: \"input-icon\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            autoComplete: \"email\",\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"input-field\",\n            placeholder: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `auth-button ${loading ? 'disabled' : ''}`,\n          disabled: loading,\n          children: loading ? 'Sending...' : 'Reset Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-text\",\n        children: [\"Remember your password?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"login-link\",\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPasswordPage, \"jnLUmKEuDHt7T6Jav1KbNZrbobQ=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","Link","Mail","resetPassword","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","loading","setLoading","error","setError","success","setSuccess","handleSubmit","e","preventDefault","response","err","console","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","size","id","type","autoComplete","required","value","onChange","target","placeholder","disabled","to","_c","$RefreshReg$"],"sources":["/Users/peikexu/Documents/goal_tracker/goal-planner-app/src/pages/ForgotPasswordPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Mail } from 'lucide-react';\nimport { resetPassword } from '../api/authApi';\nimport './AuthPages.css';\n\nconst ForgotPasswordPage = () => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess(false);\n\n      // Call reset password API\n      const response = await resetPassword(email);\n\n      if (response.success) {\n        setSuccess(true);\n        setEmail(''); // Clear the form after success\n      } else {\n        setError(response.error || 'Password reset failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Password reset error:', err);\n      setError('An unexpected error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div \n      className=\"auth-container\"\n      style={{ backgroundImage: `url('/images/login-background.jpg')` }}\n    >\n      <div className=\"auth-panel\">\n        <h2 className=\"auth-title\">\n          Forgot Password\n        </h2>\n        \n        <p className=\"auth-subtitle\">\n          Enter your email address and we'll send you a link to reset your password.\n        </p>\n\n        {/* Error Message Display */}\n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n\n        {/* Success Message */}\n        {success && (\n          <div className=\"success-message\">\n            Password reset instructions have been sent to your email.\n            Please check your inbox.\n          </div>\n        )}\n\n        {/* Reset Password Form */}\n        {!success ? (\n          <form onSubmit={handleSubmit} className=\"auth-form\">\n            {/* Email Input */}\n            <div className=\"input-group\">\n              <Mail className=\"input-icon\" size={20} />\n              <input\n                id=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"input-field\"\n                placeholder=\"Email Address\"\n              />\n            </div>\n\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              className={`auth-button ${loading ? 'disabled' : ''}`}\n              disabled={loading}\n            >\n              {loading ? 'Sending...' : 'Reset Password'}\n            </button>\n          </form>\n        ) : null}\n\n        {/* Back to Login Link */}\n        <p className=\"login-text\">\n          Remember your password?{' '}\n          <Link to=\"/login\" className=\"login-link\">\n            Back to Login\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}