{"ast":null,"code":"import axios from './axios';\n\n/**\n * Get tasks for a specific goal\n * @param {string} goalId - The ID of the goal\n * @returns {Promise<Object>} Response with tasks data\n */\nexport const getTasksByGoal = async goalId => {\n  try {\n    return await axios.get(`/goals/${goalId}/tasks`);\n  } catch (error) {\n    console.error(`Get tasks for goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch tasks',\n      data: [] // Return empty array as fallback\n    };\n  }\n};\n\n/**\n * Get tasks scheduled for today\n * @returns {Promise<Object>} Response with today's tasks\n */\nexport const getTodayTasks = async () => {\n  try {\n    return await axios.get('/tasks/today');\n  } catch (error) {\n    console.error('Get today tasks error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch today\\'s tasks',\n      data: [] // Return empty array as fallback\n    };\n  }\n};\n\n/**\n * Create a new task for a goal\n * @param {string} goalId - The ID of the goal\n * @param {Object} taskData - The task data to create\n * @returns {Promise<Object>} Response with created task\n */\nexport const createTask = async (goalId, taskData) => {\n  try {\n    return await axios.post(`/goals/${goalId}/tasks`, taskData);\n  } catch (error) {\n    console.error('Create task error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to create task'\n    };\n  }\n};\n\n/**\n * Update an existing task\n * @param {string} taskId - The ID of the task to update\n * @param {Object} taskData - The updated task data\n * @returns {Promise<Object>} Response with updated task\n */\nexport const updateTask = async (taskId, taskData) => {\n  try {\n    return await axios.put(`/tasks/${taskId}`, taskData);\n  } catch (error) {\n    console.error(`Update task ${taskId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to update task'\n    };\n  }\n};\n\n/**\n * Delete a task\n * @param {string} taskId - The ID of the task to delete\n * @returns {Promise<Object>} Response indicating success/failure\n */\nexport const deleteTask = async taskId => {\n  try {\n    return await axios.delete(`/tasks/${taskId}`);\n  } catch (error) {\n    console.error(`Delete task ${taskId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to delete task'\n    };\n  }\n};\n\n/**\n * Toggle task completion status\n * @param {string} taskId - The ID of the task to toggle\n * @returns {Promise<Object>} Response with updated task\n */\nexport const completeTask = async taskId => {\n  try {\n    return await axios.patch(`/tasks/${taskId}`);\n  } catch (error) {\n    console.error(`Complete task ${taskId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to update task completion status'\n    };\n  }\n};\n\n/**\n * Generate tasks for a goal using AI\n * @param {string} goalId - The ID of the goal\n * @returns {Promise<Object>} Response with generated tasks\n */\nexport const generateTasks = async goalId => {\n  try {\n    return await axios.post(`/goals/${goalId}/generate-tasks`);\n  } catch (error) {\n    console.error(`Generate tasks for goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to generate tasks'\n    };\n  }\n};\n\n/**\n * Fetch today's tasks - alias for getTodayTasks for backward compatibility\n */\nexport const fetchTodaysTasks = getTodayTasks;\n\n// Default export for backward compatibility\nconst taskApi = {\n  getTasksByGoal,\n  getTodayTasks,\n  createTask,\n  updateTask,\n  deleteTask,\n  completeTask,\n  generateTasks,\n  fetchTodaysTasks\n};\nexport default taskApi;","map":{"version":3,"names":["axios","getTasksByGoal","goalId","get","error","console","success","data","getTodayTasks","createTask","taskData","post","updateTask","taskId","put","deleteTask","delete","completeTask","patch","generateTasks","fetchTodaysTasks","taskApi"],"sources":["/Users/peikexu/Documents/goal_tracker/goal-planner-app/src/api/taskApi.js"],"sourcesContent":["import axios from './axios';\n\n/**\n * Get tasks for a specific goal\n * @param {string} goalId - The ID of the goal\n * @returns {Promise<Object>} Response with tasks data\n */\nexport const getTasksByGoal = async (goalId) => {\n  try {\n    return await axios.get(`/goals/${goalId}/tasks`);\n  } catch (error) {\n    console.error(`Get tasks for goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch tasks',\n      data: [] // Return empty array as fallback\n    };\n  }\n};\n\n/**\n * Get tasks scheduled for today\n * @returns {Promise<Object>} Response with today's tasks\n */\nexport const getTodayTasks = async () => {\n  try {\n    return await axios.get('/tasks/today');\n  } catch (error) {\n    console.error('Get today tasks error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to fetch today\\'s tasks',\n      data: [] // Return empty array as fallback\n    };\n  }\n};\n\n/**\n * Create a new task for a goal\n * @param {string} goalId - The ID of the goal\n * @param {Object} taskData - The task data to create\n * @returns {Promise<Object>} Response with created task\n */\nexport const createTask = async (goalId, taskData) => {\n  try {\n    return await axios.post(`/goals/${goalId}/tasks`, taskData);\n  } catch (error) {\n    console.error('Create task error:', error);\n    return {\n      success: false,\n      error: error.error || 'Failed to create task'\n    };\n  }\n};\n\n/**\n * Update an existing task\n * @param {string} taskId - The ID of the task to update\n * @param {Object} taskData - The updated task data\n * @returns {Promise<Object>} Response with updated task\n */\nexport const updateTask = async (taskId, taskData) => {\n  try {\n    return await axios.put(`/tasks/${taskId}`, taskData);\n  } catch (error) {\n    console.error(`Update task ${taskId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to update task'\n    };\n  }\n};\n\n/**\n * Delete a task\n * @param {string} taskId - The ID of the task to delete\n * @returns {Promise<Object>} Response indicating success/failure\n */\nexport const deleteTask = async (taskId) => {\n  try {\n    return await axios.delete(`/tasks/${taskId}`);\n  } catch (error) {\n    console.error(`Delete task ${taskId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to delete task'\n    };\n  }\n};\n\n/**\n * Toggle task completion status\n * @param {string} taskId - The ID of the task to toggle\n * @returns {Promise<Object>} Response with updated task\n */\nexport const completeTask = async (taskId) => {\n  try {\n    return await axios.patch(`/tasks/${taskId}`);\n  } catch (error) {\n    console.error(`Complete task ${taskId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to update task completion status'\n    };\n  }\n};\n\n/**\n * Generate tasks for a goal using AI\n * @param {string} goalId - The ID of the goal\n * @returns {Promise<Object>} Response with generated tasks\n */\nexport const generateTasks = async (goalId) => {\n  try {\n    return await axios.post(`/goals/${goalId}/generate-tasks`);\n  } catch (error) {\n    console.error(`Generate tasks for goal ${goalId} error:`, error);\n    return {\n      success: false,\n      error: error.error || 'Failed to generate tasks'\n    };\n  }\n};\n\n/**\n * Fetch today's tasks - alias for getTodayTasks for backward compatibility\n */\nexport const fetchTodaysTasks = getTodayTasks;\n\n// Default export for backward compatibility\nconst taskApi = {\n  getTasksByGoal,\n  getTodayTasks,\n  createTask,\n  updateTask,\n  deleteTask,\n  completeTask,\n  generateTasks,\n  fetchTodaysTasks\n};\n\nexport default taskApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}